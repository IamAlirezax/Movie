{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amoha\\\\OneDrive\\\\Skrivbord\\\\TheMovie-master (1)\\\\TheMovie-master\\\\src\\\\Components\\\\MovieList.js\";\nimport React, { Component } from \"react\";\nimport { Button, Card, CardFooter, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from \"reactstrap\";\nexport default class MovieList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getMovies = async () => {\n      const response = await fetch(\"https://localhost:44312/api/Movies\").then(response => response.json()).then(data => this.setState({\n        result: data,\n        loaded: true\n      }));\n      console.log(this.state.result);\n    };\n\n    this.handleClick = () => {};\n\n    this.Email = event => {\n      this.setState({\n        Email: event.target.value\n      });\n    };\n\n    this.Password = event => {\n      this.setState({\n        Password: event.target.value\n      });\n    };\n\n    this.MovieID = event => {\n      this.setState({\n        MovieID: event.target.value\n      });\n    };\n\n    this.state = {\n      result: null,\n      loaded: false,\n      Email: \"\"\n    };\n    this.Email = this.Email.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  booking() {\n    fetch(\"https://localhost:44312/api/Bookings\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        Email: this.state.Email,\n        tmdbID: this.state.result.Id\n      })\n    }).then(Response => Response.json()).then(Result => {\n      if (Result.Status == \"Success\") alert(\"Bokning slutförd\");else alert(\"Något gick fel\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Visnings\"), this.state.loaded ? this.state.result !== null ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"    \", this.state.result !== undefined && this.state.result !== null ? this.state.result.map(item => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"* Datum = \", item.ViewingDate, \" **Filmnamn = \", item.MovieName, \" **l\\xE4ngd =\", item.Length, \" **Antals\\xE4tte = \", item.TotalSeats, React.createElement(\"img\", {\n      alt: \"poster\",\n      width: \"80\",\n      src: item.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Bokning f\\xF6r film: \", item.MovieName), React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      onChange: this.Email,\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: () => this.booking(this.props.MovieName),\n      color: \"success\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Boka\")))) : null) : null : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/amoha/OneDrive/Skrivbord/TheMovie-master (1)/TheMovie-master/src/Components/MovieList.js"],"names":["React","Component","Button","Card","CardFooter","CardBody","CardGroup","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","MovieList","constructor","props","getMovies","response","fetch","then","json","data","setState","result","loaded","console","log","state","handleClick","Email","event","target","value","Password","MovieID","bind","componentDidMount","booking","method","headers","Accept","body","JSON","stringify","tmdbID","Id","Response","Result","Status","alert","render","undefined","map","item","ViewingDate","MovieName","Length","TotalSeats","poster_path"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport {\n  Button,\n  Card,\n  CardFooter,\n  CardBody,\n  CardGroup,\n  Col,\n  Container,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row\n} from \"reactstrap\";\n\nexport default class MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { result: null, loaded: false , Email: \"\" };\n  \n \n\n  this.Email = this.Email.bind(this);\n}\n\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  getMovies = async () => {\n    const response = await fetch(\"https://localhost:44312/api/Movies\")\n      .then(response => response.json())\n      .then(data => this.setState({ result: data, loaded: true }));\n      console.log(this.state.result)\n  };\n  handleClick = () => {};\n\n  Email = event => {\n    this.setState({ Email: event.target.value });\n  };\n  Password = event => {\n    this.setState({ Password: event.target.value });\n  };\n  MovieID = event => {\n    this.setState({ MovieID: event.target.value });\n  };\n  booking() {\n    fetch(\"https://localhost:44312/api/Bookings\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        Email: this.state.Email,\n        tmdbID: this.state.result.Id,\n      })\n    })\n      .then(Response => Response.json())\n      .then(Result => {\n        if (Result.Status == \"Success\") alert(\"Bokning slutförd\");\n        else alert(\"Något gick fel\");\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>Visnings</div>\n        {this.state.loaded ? (\n          this.state.result !== null ? (\n           \n            <div>    {this.state.result !== undefined && this.state.result !== null\n                ? this.state.result.map(item => (\n                    <div>\n                   <a>* Datum = {item.ViewingDate} **Filmnamn = {item.MovieName} **längd =\n                      {item.Length} **Antalsätte = {item.TotalSeats} \n                      <img\n                  alt=\"poster\"\n                  width=\"80\"\n                  src={item.poster_path}\n                /> </a>\n                      <div>\n        {\" \"}\n        \n          <div>Bokning för film: {item.MovieName}</div>\n\n          <InputGroup className=\"mb-3\">\n            <Input type=\"text\" onChange={this.Email} placeholder=\"Email\" />\n          </InputGroup>\n\n          <Button\n            onClick={() => this.booking(this.props.MovieName)}\n\n            color=\"success\"\n            block\n          >\n            Boka\n          </Button>\n        </div>\n      \n                     \n                    </div>\n                  ))\n                : null}\n            </div>\n          ) : null\n        ) : (\n          <div>Loading...</div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}