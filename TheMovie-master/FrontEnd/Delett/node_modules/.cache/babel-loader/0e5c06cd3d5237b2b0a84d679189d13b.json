{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amoha\\\\OneDrive\\\\Skrivbord\\\\TheMovie-master (1)\\\\TheMovie-master\\\\src\\\\Components\\\\MovieList.js\";\nimport React, { Component } from \"react\";\nexport default class MovieList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getMovies = async () => {\n      const response = await fetch(\"https://localhost:44312/api/Movies\").then(response => response.json()).then(data => this.setState({\n        result: data,\n        loaded: true\n      }));\n    };\n\n    this.state = {\n      result: null,\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Visnings\"), this.state.loaded ? this.state.result !== null ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"1 =( \", this.state.result !== undefined && this.state.result !== null ? this.state.result.map(item => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, item.Id, \". \", item.ViewingDate, \" - \", item.MovieName, \" (\", item.Length, \"m) [Seats: \", item.TotalSeats, \" ]\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, item.poster_path, \"  \"))) : null) : null : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/amoha/OneDrive/Skrivbord/TheMovie-master (1)/TheMovie-master/src/Components/MovieList.js"],"names":["React","Component","MovieList","constructor","props","getMovies","response","fetch","then","json","data","setState","result","loaded","state","componentDidMount","render","undefined","map","item","Id","ViewingDate","MovieName","Length","TotalSeats","poster_path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAC/CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,SATmB,GASP,YAAY;AACtB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAAL,CACpBC,IADoB,CACfF,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EADG,EAEpBD,IAFoB,CAEfE,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEF,IAAV;AAAgBG,QAAAA,MAAM,EAAE;AAAxB,OAAd,CAFO,CAAvB;AAGD,KAbkB;;AAEjB,SAAKC,KAAL,GAAa;AAAEF,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,MAAM,EAAE;AAAxB,KAAb;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,SAAL;AACD;;AAQDW,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,KAAKF,KAAL,CAAWD,MAAX,GACC,KAAKC,KAAL,CAAWF,MAAX,KAAsB,IAAtB,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACO,KAAKE,KAAL,CAAWF,MAAX,KAAsBK,SAAtB,IAAmC,KAAKH,KAAL,CAAWF,MAAX,KAAsB,IAAzD,GACD,KAAKE,KAAL,CAAWF,MAAX,CAAkBM,GAAlB,CAAsBC,IAAI,IACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAACC,EADR,QACcD,IAAI,CAACE,WADnB,SACmCF,IAAI,CAACG,SADxC,QAEGH,IAAI,CAACI,MAFR,iBAE2BJ,IAAI,CAACK,UAFhC,QAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAML,IAAI,CAACM,WAAX,OAHF,CADF,CADC,GAQD,IATN,CADF,GAYI,IAbL,GAeC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBJ,CADF;AAsBD;;AAvC8C","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { result: null, loaded: false };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  getMovies = async () => {\n    const response = await fetch(\"https://localhost:44312/api/Movies\")\n      .then(response => response.json())\n      .then(data => this.setState({ result: data, loaded: true }));\n  };\n\n  render() {\n    return (\n      <div>\n        <div>Visnings</div>\n        {this.state.loaded ? (\n          this.state.result !== null ? (\n            <div>\n             1 =( {this.state.result !== undefined && this.state.result !== null\n                ? this.state.result.map(item => (\n                    <div>\n                      {item.Id}. {item.ViewingDate} - {item.MovieName} (\n                      {item.Length}m) [Seats: {item.TotalSeats} ] \n                      <div>{item.poster_path}  </div>\n                    </div>\n                  ))\n                : null}\n            </div>\n          ) : null\n        ) : (\n          <div>Loading...</div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}