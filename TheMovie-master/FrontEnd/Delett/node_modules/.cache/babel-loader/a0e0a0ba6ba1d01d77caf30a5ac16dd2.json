{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amoha\\\\OneDrive\\\\Skrivbord\\\\TheMovie-master (1)\\\\TheMovie-master\\\\src\\\\Components\\\\MovieSearch.js\";\nimport React, { Component } from \"react\";\nimport \"./../App.css\";\nimport MovieRow from \"./MovieRow.js\";\nimport $ from \"jquery\";\n\nclass MovieSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.performSearch = searchTerm => {\n      console.log(\"perform search using moviedb\");\n      const urlString = \"https://localhost:44312/api/Movies\" + searchTerm;\n\n      const onMovieSelect = id => {\n        this.props.onMovieSelect(id);\n      };\n\n      $.ajax({\n        url: urlString,\n        success: searchResults => {\n          console.log(\"fetched data successfully\");\n          const results = searchResults.results;\n          console.log(results);\n          var movieRows = [];\n          sea.forEach(movie => {\n            movie.poster_src = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path;\n            const movieRow = React.createElement(MovieRow, {\n              onMovieSelect: id => onMovieSelect(id),\n              key: movie.id,\n              movie: movie,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36\n              },\n              __self: this\n            });\n            movieRows.push(movieRow);\n          });\n          this.setState({\n            rows: movieRows\n          });\n        },\n        error: (xhr, status, err) => {\n          console.error(\"failed to fetch data\");\n        }\n      });\n    };\n\n    this.state = {\n      searchTerm: \"\"\n    };\n    this.performSearch(\"\");\n  }\n\n  searchChangeHandler(event) {\n    console.log(event.target.value);\n    const boundObject = this;\n    this.setState({\n      searchTerm: event.target.value\n    });\n    boundObject.performSearch(this.state.searchTerm);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        fontSize: 20,\n        display: \"center\",\n        paddingTop: 8,\n        paddingBottom: 6,\n        paddingLeft: 13\n      },\n      onChange: this.searchChangeHandler.bind(this),\n      placeholder: \"S\\xF6k film\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), this.state.searchTerm.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" \", this.state.rows, \" \") : null);\n  }\n\n}\n\nexport default MovieSearch;","map":{"version":3,"sources":["C:/Users/amoha/OneDrive/Skrivbord/TheMovie-master (1)/TheMovie-master/src/Components/MovieSearch.js"],"names":["React","Component","MovieRow","$","MovieSearch","constructor","props","performSearch","searchTerm","console","log","urlString","onMovieSelect","id","ajax","url","success","searchResults","results","movieRows","sea","forEach","movie","poster_src","poster_path","movieRow","push","setState","rows","error","xhr","status","err","state","searchChangeHandler","event","target","value","boundObject","render","fontSize","display","paddingTop","paddingBottom","paddingLeft","bind","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./../App.css\";\nimport MovieRow from \"./MovieRow.js\";\nimport $ from \"jquery\";\n\nclass MovieSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: \"\"\n    };\n    this.performSearch(\"\");\n  }\n\n  performSearch = searchTerm => {\n    console.log(\"perform search using moviedb\");\n    const urlString =\n      \"https://localhost:44312/api/Movies\" +\n      searchTerm;\n    const onMovieSelect = id => {\n      this.props.onMovieSelect(id);\n    };\n    $.ajax({\n      url: urlString,\n      success: searchResults => {\n        console.log(\"fetched data successfully\");\n        \n        const results = searchResults.results;\n        console.log(results)\n        var movieRows = [];\n        sea.forEach(movie => {\n          movie.poster_src =\n            \"https://image.tmdb.org/t/p/w185\" + movie.poster_path;\n\n          const movieRow = (\n            <MovieRow\n              onMovieSelect={id => onMovieSelect(id)}\n              key={movie.id}\n              movie={movie}\n            />\n          );\n          movieRows.push(movieRow);\n        });\n        this.setState({ rows: movieRows });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"failed to fetch data\");\n      }\n    });\n  };\n  searchChangeHandler(event) {\n    console.log(event.target.value);\n    const boundObject = this;\n    this.setState({ searchTerm: event.target.value });\n    boundObject.performSearch(this.state.searchTerm);\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          style={{\n            fontSize: 20,\n            display: \"center\",\n            paddingTop: 8,\n            paddingBottom: 6,\n            paddingLeft: 13\n          }}\n          onChange={this.searchChangeHandler.bind(this)}\n          placeholder=\"SÃ¶k film\"\n        />\n        {this.state.searchTerm.length > 0 ? (\n          <div> {this.state.rows} </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default MovieSearch;\n"]},"metadata":{},"sourceType":"module"}