{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amoha\\\\OneDrive\\\\Skrivbord\\\\TheMovie-master (1)\\\\TheMovie-master\\\\src\\\\Components\\\\MovieList.js\";\nimport React, { Component } from \"react\";\nimport Booking from \"./Booking\";\nimport { Button, Card, CardFooter, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from \"reactstrap\";\nexport default class MovieList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getMovies = async () => {\n      const response = await fetch(\"https://localhost:44312/api/Movies\").then(response => response.json()).then(data => this.setState({\n        result: data,\n        loaded: true\n      }));\n    };\n\n    this.handleClick = () => {};\n\n    this.Email = event => {\n      this.setState({\n        Email: event.target.value\n      });\n    };\n\n    this.Password = event => {\n      this.setState({\n        Password: event.target.value\n      });\n    };\n\n    this.MovieID = event => {\n      this.setState({\n        MovieID: event.target.value\n      });\n    };\n\n    this.state = {\n      result: null,\n      loaded: false,\n      Email: \"\"\n    };\n    this.Email = this.Email.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  booking() {\n    fetch(\"https://localhost:44312/api/Bookings\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        Email: this.state.Email,\n        tmdbID: this.props.item.id\n      })\n    }).then(Response => Response.json()).then(Result => {\n      if (Result.Status == \"Success\") alert(\"Bokning slutförd\");else alert(\"Något gick fel\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Visnings\"), this.state.loaded ? this.state.result !== null ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"   \", this.state.result !== undefined && this.state.result !== null ? this.state.result.map(item => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"* Datum = \", item.ViewingDate, \" **Filmnamn = \", item.MovieName, \" **l\\xE4ngd =\", item.Length, \" **Antals\\xE4tte = \", item.TotalSeats, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"  \", React.createElement(\"img\", {\n      class: \"poster\",\n      width: \"120\",\n      src: \"https://image.tmdb.org/t/p/w185/udDclJoHjfjb8Ekgsd4FDteOkCU.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), \"  \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Bokning f\\xF6r filmID: \", ite), React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      onChange: this.Email,\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: () => this.booking(this.props.movieId),\n      color: \"success\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Boka\")))) : null) : null : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/amoha/OneDrive/Skrivbord/TheMovie-master (1)/TheMovie-master/src/Components/MovieList.js"],"names":["React","Component","Booking","Button","Card","CardFooter","CardBody","CardGroup","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","MovieList","constructor","props","getMovies","response","fetch","then","json","data","setState","result","loaded","handleClick","Email","event","target","value","Password","MovieID","state","bind","componentDidMount","booking","method","headers","Accept","body","JSON","stringify","tmdbID","item","id","Response","Result","Status","alert","render","undefined","map","ViewingDate","MovieName","Length","TotalSeats","ite","movieId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Booking from \"./Booking\"\nimport {\n  Button,\n  Card,\n  CardFooter,\n  CardBody,\n  CardGroup,\n  Col,\n  Container,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row\n} from \"reactstrap\";\n\nexport default class MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { result: null, loaded: false , Email: \"\" };\n  \n \n\n  this.Email = this.Email.bind(this);\n}\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  getMovies = async () => {\n    const response = await fetch(\"https://localhost:44312/api/Movies\")\n      .then(response => response.json())\n      .then(data => this.setState({ result: data, loaded: true }));\n  };\n  handleClick = () => {};\n\n  Email = event => {\n    this.setState({ Email: event.target.value });\n  };\n  Password = event => {\n    this.setState({ Password: event.target.value });\n  };\n  MovieID = event => {\n    this.setState({ MovieID: event.target.value });\n  };\n  booking() {\n    fetch(\"https://localhost:44312/api/Bookings\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        Email: this.state.Email,\n        tmdbID: this.props.item.id\n      })\n    })\n      .then(Response => Response.json())\n      .then(Result => {\n        if (Result.Status == \"Success\") alert(\"Bokning slutförd\");\n        else alert(\"Något gick fel\");\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>Visnings</div>\n        {this.state.loaded ? (\n          this.state.result !== null ? (\n           \n            <div>   {this.state.result !== undefined && this.state.result !== null\n                ? this.state.result.map(item => (\n                    <div>\n                     * Datum = {item.ViewingDate} **Filmnamn = {item.MovieName} **längd =\n                      {item.Length} **Antalsätte = {item.TotalSeats} \n                      <div>  <img class=\"poster\" width=\"120\" src=\"https://image.tmdb.org/t/p/w185/udDclJoHjfjb8Ekgsd4FDteOkCU.jpg\" />  </div>\n                      <div>\n        {\" \"}\n        \n          <div>Bokning för filmID: {ite}</div>\n\n          <InputGroup className=\"mb-3\">\n            <Input type=\"text\" onChange={this.Email} placeholder=\"Email\" />\n          </InputGroup>\n\n          <Button\n            onClick={() => this.booking(this.props.movieId)}\n            color=\"success\"\n            block\n          >\n            Boka\n          </Button>\n        </div>\n      \n                     \n                    </div>\n                  ))\n                : null}\n            </div>\n          ) : null\n        ) : (\n          <div>Loading...</div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}